{"version":3,"file":"component---src-pages-blog-js-f856457932abc4a33673.js","mappings":"oJAuBA,IApBgB,IAGZ,uBAAKA,UAAU,4BACb,uBAAKA,UAAU,qBACb,sBAAIA,UAAU,iBAAgB,kDAC9B,yBAAG,0BAAI,cAAW,yBAAG,QAAQ,eAC7B,2BACA,0BAAI,0EAEJ,uBAAKA,UAAU,mBACf,0BAAQA,UAAU,+CAChB,qBAAGC,KAASC,EAAAA,EAAW,qCAAqC,0B,wDCwCtE,IAlDiB,IAAgB,IAAf,MAAEC,GAAO,EAEzB,OACE,uBAAKC,GAAG,QAAQJ,UAAU,mBACxB,uBAAKA,UAAU,qBACb,sBAAIA,UAAU,iBAAgB,cAC5B,sBAAIK,MAAO,CAAEC,UAAU,SACpBH,EAAMI,KAAIC,IAAS,IAAD,IACjB,MAAMC,EAAQD,EAAKE,YAAYD,OAASD,EAAKG,OAAOC,KAC9CC,GAAcC,EAAAA,EAAAA,GAAuC,QAA/B,EAACN,EAAKE,YAAYK,qBAAa,OAAiB,QAAjB,EAA9B,EAAgCC,uBAAe,WAAjB,EAA9B,EAAiDC,iBAE9E,OACE,sBAAIC,IAAKV,EAAKG,OAAOC,MACnB,2BACEZ,UAAU,iBACVmB,WAAS,EACTC,SAAS,6BAET,2BAASpB,UAAU,OACjB,qBAAGC,KAAI,GAAKC,EAAAA,EAAcM,EAAKG,OAAOC,MACpC,gBAAC,EAAAS,EAAW,CAACC,MAAOT,EAAab,UAAU,wBAE7C,uBAAKA,UAAU,QACb,0BACE,qBAAGC,KAAI,GAAKC,EAAAA,EAAcM,EAAKG,OAAOC,MACpC,wBAAMW,SAAS,YAAYd,KAG/B,6BAAQD,EAAKE,YAAYc,MACzB,qBACEC,wBAAyB,CACvBC,OAAQlB,EAAKE,YAAYiB,aAAenB,EAAKoB,SAE/CL,SAAS,kBAKf,iCAGC,MAKX,C,yDCQV,IAhDY,KAAO,IAAD,IAChB,MAAMM,GAAOC,EAAAA,EAAAA,gBAAe,cAiBtBC,EAA+B,QAAzB,EAAGF,EAAKG,KAAKC,oBAAY,aAAtB,EAAwBF,OACjCG,EAA+B,QAAzB,EAAGL,EAAKG,KAAKC,oBAAY,aAAtB,EAAwBC,OAEvC,OACE,uBAAKlC,UAAU,OACb,2BACE,gBAAC,EAAAmC,EAAW,CACVnC,UAAU,aACVoC,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,4BACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,IAAI,kBAAiB,wBAGxBX,aAAM,EAANA,EAAQY,OACP,yBAAG,cACU,8BAASZ,EAAOY,MAAc,KAAEZ,aAAM,EAANA,EAAQa,UAAW,KAAI,IAElE,qBAAG3C,KAAI,6BAA6BiC,aAAM,EAANA,EAAQW,WAAQ,KAAU,8BAK9D,C,iICNV,UAxCkB,IAAyB,IAAD,MAAvB,KAAEhB,EAAI,SAAEiB,GAAU,EACnC,MAAMC,GAAkC,QAAtB,EAAAlB,EAAKG,KAAKC,oBAAY,aAAtB,EAAwBxB,QAAK,QACzCN,EAAQ0B,EAAKmB,kBAAkBC,MAErC,OAAqB,IAAjB9C,EAAM+C,OAEN,gBAAC,IAAM,CAACJ,SAAUA,EAAUrC,MAAOsC,GACjC,yBAAG,6JAKH,gBAAC,IAAG,OAMR,gBAAC,IAAM,CAACD,SAAUA,EAAUrC,MAAOsC,EAAWI,WAAW,EAAOC,WAAS,GAIzE,uBAAKpD,UAAU,6BACb,gBAAC,IAAQ,CAACG,MAAOA,IACjB,uBAAKH,UAAU,qBAGb,gBAAC,IAAO,MAGR,gBAAC,IAAG,QAMC,EAWN,MAAMqD,EAAO,IAAM,gBAAC,IAAG,CAAC5C,MAAM,a","sources":["webpack://gatsby-starter-blog/./src/components/GetFree.js","webpack://gatsby-starter-blog/./src/components/PostList.js","webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/pages/blog.js"],"sourcesContent":["import * as React from \"react\"\nimport { blogBaseUrl } from \"../constants\";\n\nconst GetFree = () => {\n\n  return (\n    <div className=\"section-padding get-free\">\n      <div className=\"content-container\">\n        <h2 className=\"section-title\">Want to boost your TypeScript knowledge, fast?</h2>\n        <p><em>ðŸ‘‰ Get the <b>FREE</b> guide. ðŸ‘ˆ</em></p>\n        <br/>\n        <h3>TypeScript Essentials: 5 Critical Keys to Using TypeScript Effectively</h3>\n        \n        <div className=\"section-padding\">\n        <button className=\"button button-info button-medium hover-grow\">\n          <a href={`${blogBaseUrl}/typescript-essentials-free-guide`}>Get Your FREE Guide</a>\n        </button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default GetFree;\n","import * as React from \"react\"\nimport { blogBaseUrl } from \"../constants\"\n\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\n\nconst PostList = ({ posts }) => {\n\n  return (\n    <div id=\"posts\" className=\"section-padding\">\n      <div className=\"content-container\">\n        <h2 className=\"section-title\">What's New</h2>\n          <ol style={{ listStyle: `none` }}>\n            {posts.map(post => {\n              const title = post.frontmatter.title || post.fields.slug\n              const featuredImg = getImage(post.frontmatter.featuredImage?.childImageSharp?.gatsbyImageData)\n\n              return (\n                <li key={post.fields.slug}>\n                  <article\n                    className=\"post-list-item\"\n                    itemScope\n                    itemType=\"http://schema.org/Article\"\n                  >\n                    <section className=\"row\">\n                      <a href={`${blogBaseUrl}${post.fields.slug}`}>\n                        <GatsbyImage image={featuredImg} className=\"post-list-item-img\" />\n                      </a>\n                      <div className=\"pl-5\">\n                        <h2>\n                          <a href={`${blogBaseUrl}${post.fields.slug}`}>\n                            <span itemProp=\"headline\">{title}</span>\n                          </a>\n                        </h2>\n                        <small>{post.frontmatter.date}</small>\n                        <p\n                          dangerouslySetInnerHTML={{\n                            __html: post.frontmatter.description || post.excerpt,\n                          }}\n                          itemProp=\"description\"\n                        />\n                      </div>\n\n                    </section>\n                    <section>\n                    </section>\n                  </article>\n                </li>\n              )\n            })}\n          </ol>\n        </div>\n    </div>\n  )\n}\n\nexport default PostList;\n","/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n\n  return (\n    <div className=\"bio\">\n      <div>\n        <StaticImage\n          className=\"bio-avatar\"\n          layout=\"fixed\"\n          formats={[\"auto\", \"webp\", \"avif\"]}\n          src=\"../img/about/headshot.jpg\"\n          width={50}\n          height={50}\n          quality={95}\n          alt=\"Profile picture\"\n        />\n      </div>\n      {author?.name && (\n        <p>\n          Written by <strong>{author.name}</strong> {author?.summary || null}\n          {` `}\n          <a href={`https://linkedin.com/in/${social?.linkedin || ``}`}>\n            ðŸ‘‰ Follow me on LinkedIn!\n          </a>\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport PostList from \"../components/PostList\"\nimport GetFree from \"../components/GetFree\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n        <Bio />\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle} addMargin={false} hideTitle>\n\n\n\n    <div className=\"section-padding blog-post\">\n      <PostList posts={posts} />\n      <div className=\"content-container\">\n\n        {/* free download section */}\n        <GetFree />\n\n        {/* bio section */}\n        <Bio />\n        \n      </div>\n    </div>\n\n\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\n/**\n * Head export to define metadata for the page\n *\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\n */\nexport const Head = () => <Seo title=\"All posts\" />\n\nexport const pageQuery = graphql`\n  {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { frontmatter: { date: DESC } }, filter: { frontmatter: { type: { ne: \"exclusive\" } } }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n          featuredImage {\n            childImageSharp {\n              gatsbyImageData(width: 300, height: 200)\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["className","href","blogBaseUrl","posts","id","style","listStyle","map","post","title","frontmatter","fields","slug","featuredImg","getImage","featuredImage","childImageSharp","gatsbyImageData","key","itemScope","itemType","G","image","itemProp","date","dangerouslySetInnerHTML","__html","description","excerpt","data","useStaticQuery","author","site","siteMetadata","social","S","layout","formats","src","width","height","quality","alt","name","summary","linkedin","location","siteTitle","allMarkdownRemark","nodes","length","addMargin","hideTitle","Head"],"sourceRoot":""}